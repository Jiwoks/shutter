#! /usr/bin/perl

###################################################
#
#  Copyright (C) 2008, 2009, 2010 Mario Kemper <mario.kemper@googlemail.com> and Shutter Team
#
#  This file is part of Shutter.
#
#  Shutter is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  Shutter is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Shutter; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
###################################################

#modules
#--------------------------------------
use utf8;
use strict;
use warnings;

#Gnome2 libraries
use Gnome2;
use Gnome2::GConf;
use Gnome2::Wnck;
use Gnome2::VFS '-init';

#Use AuthenticationManager to handle user credentials easily
Gnome2::AuthenticationManager->init;

#Gtk2 and Gtk2::ImageView
use Gtk2 '-init';
use Gtk2::Gdk::Keysyms;
use Gtk2::Pango;
use Gtk2::ImageView;

#Use single instance applications
use Gtk2::Unique;

#Glib
use Glib qw/TRUE FALSE/; 

#Locate directory of original perl script
use FindBin '$Bin';

#--------------------------------------

#define constants
#--------------------------------------
use constant MAX_ERROR			=> 5;
use constant SHUTTER_REV		=> 'Rev.<>';
use constant SHUTTER_NAME		=> 'Shutter';
use constant SHUTTER_VERSION	=> '<major>.<minor>';

#--------------------------------------

#configure path settings
#--------------------------------------
my $shutter_root = undef;
if($ENV{PAR_TEMP}){
	$shutter_root = $ENV{PAR_TEMP};
}else{
	$Bin =~ m/(.*)\//;
	$shutter_root = $1;
}

my $shutter_path = $Bin . "/shutter";
$ENV{'SHUTTER_ROOT'} = $shutter_root;    #used by some plugins

#--------------------------------------

#load modules at custom path at runtime
#--------------------------------------
require lib;
import lib "$shutter_root/share/shutter/resources/modules";

#Sort::Naturally - sort lexically, but sort numeral parts numerically
require Sort::Naturally;

#proc (Thanks to Michael Schilli)
require Proc::Simple;

#File::Which - Portable implementation of the `which' utility
require File::Which;

#Perl extension for recursively copying files and directories (Thanks to Daniel Muey)
require File::Copy::Recursive;

#Find programs to open a file by mimetype
require File::MimeInfo::Applications;

#Find your home and other directories, on any platform
require File::HomeDir::Unix;
require File::HomeDir;
$ENV{ 'HOME' } = File::HomeDir->my_home;

#--------------------------------------

#check optional components
#--------------------------------------
my $gnome_web_photo = TRUE;
my $nautilus_sendto = TRUE;
my $goocanvas       = TRUE;
my $ubuntuone       = TRUE;
#~ &fct_init_depend;

#--------------------------------------

#load shutter's modules
#--------------------------------------

#app classes
require Shutter::App::MainApp;
require Shutter::App::AboutDialog;
require Shutter::App::Common;
require Shutter::App::GlobalSettings;
require Shutter::App::SimpleDialogs;
require Shutter::App::HelperFunctions;
require Shutter::App::Menu;
require Shutter::App::Notification;
require Shutter::App::ShutterNotification;
require Shutter::App::Toolbar;

#region
require Shutter::Geometry::Region;

#pixbuf operations
require Shutter::Pixbuf::Save;
require Shutter::Pixbuf::Thumbnail;
require Shutter::Pixbuf::Border;

#drawing classes
if($goocanvas){
	require Shutter::Draw::DrawingTool;
}

#screenshot classes
require Shutter::Screenshot::SelectorAdvanced;
require Shutter::Screenshot::SelectorSimple;
require Shutter::Screenshot::Workspace;
require Shutter::Screenshot::Web;
require Shutter::Screenshot::Window;
require Shutter::Screenshot::WindowXid;
require Shutter::Screenshot::Error;

#upload classes
require Shutter::Upload::ImageBanana;
require Shutter::Upload::ImageShack;
require Shutter::Upload::FTP;
if($ubuntuone){
	require Shutter::Upload::UbuntuOne;
}
#--------------------------------------

my $app = Gtk2::UniqueApp->new(
		"org.example.UnitTets", undef,
		window => 1,
		full => 2,
);

#The application is already running, send it a message
if ($app->is_running) {

	my ($text) = @ARGV ? @ARGV : ("Foo text here");
	$app->send_message_by_name('window', text => $text);

#Create the single application instance and wait for other requests
} else {
	
	my $main = Shutter::App::MainApp->new();
	$main->run($app, $shutter_root, $shutter_path, $gnome_web_photo, $nautilus_sendto, $goocanvas, $ubuntuone);
	
}
